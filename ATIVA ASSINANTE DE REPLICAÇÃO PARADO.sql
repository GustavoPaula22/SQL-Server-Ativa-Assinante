--TABELA TEMPORARIO PARA SALVAR INFORMAÇÕES DA PROCEDURE DE SISTEMA sp_help_jobactivity
CREATE TABLE #TEMP_RESULT (SESSION_ID INT,
						   JOB_ID NVARCHAR(255),
						   JOB_NAME NVARCHAR(255),
						   RUN_RESQUESTED_DATE DATETIME,
						   RUN_RESQUESTED_SOURCE INT,
						   QUEUED_DATE DATETIME,
						   START_EXECUTION_DATE DATETIME,
						   LAST_EXECUTED_STEP_ID INT,
						   LAST_EXECUTED_STEP_DATE DATETIME,
						   STOP_EXECUTION_DATE DATETIME,
						   NEXT_SCHEDULED_DATE DATETIME,
						   JOB_HISTORY_ID NVARCHAR(255),
						   MESSAGE TEXT,
						   RUN_STATUS INT,
						   OPERATOR_ID_EMAIL INT,
						   OPERATOR_ID_NETSENT INT,
						   OPERATOR_ID_PAGED INT);

--SELECIONA AS JOBS QUE QUEREMOS MONITORAR, RANKEANDO AS PARA PODER UTILIZAR NO LOOP
SELECT RANK() OVER (ORDER BY job_id DESC) AS POSICAO, job_id, name INTO #TEMP FROM [msdb].[dbo].[sysjobs]
WHERE name LIKE 'CP-DBS01\TOTVS-P11PRD-Rep_P11PRD_%';

--DECLARA VAREAVEIS PARA UTILIZAR PARA SALVAR VALORES
DECLARE @CONTADOR INT,
		@ID VARCHAR(50),
		@NOME VARCHAR(50);
SET @CONTADOR = 1;

--LOOP DE REPETIÇÃO DE EXECUÇÃO 
WHILE @CONTADOR <= (SELECT COUNT(*) FROM #TEMP)

	BEGIN
		--SELECIONA O VALOR QUE SERA UTILIZADO DE ACORDO COM A POSIÇÃO
		SET @ID = (SELECT job_id FROM #TEMP WHERE POSICAO = @CONTADOR);
		SET @NOME = (SELECT name FROM #TEMP WHERE POSICAO = @CONTADOR);

		--INSERE OS VALORES RETORNADOS DA PROCEDURE sp_help_jobactivity NA TABELA CRIANDA ANTERIORMENTE
		INSERT INTO #TEMP_RESULT EXEC msdb.dbo.sp_help_jobactivity @ID  
		
		--VERIFICA O STATUS DE EXECUÇÃO ATUAL DA JOB E ATIVA ELA SE ESTIVER DIFERENTE DE NULL
			--STATUS: 
			--	NULL -> ESTÁ ATIVO E FUNCIONANDO
			--	DIFERENTE DE NULL -> ESTA PARADA COM O MOTIVO DE PARADA. DICIONARIO DE PARADA NOS COMENTARIOS ABAIXO
		IF((SELECT RUN_STATUS FROM #TEMP_RESULT WHERE JOB_ID = @ID) IS NOT NULL)
			BEGIN
				EXEC msdb.dbo.sp_start_job NULL, @ID;
				PRINT CONCAT('JOB ',@NOME, ' ATIVADA NOVAMENTE;')
			END
		ELSE
			PRINT CONCAT('JOB ',@NOME, ' EM EXECUXÃO;')
		
		-- ADICIONA +1 NO CONTADOR
		SET @CONTADOR = @CONTADOR+1
	END;

	--DROPA AS TABELAS TEMPORARIOS AO FINAL DO PROCESSO PARA NÃO OCORRER CONFLITO NA PROXIMA EXECUÇÃO
	DROP TABLE #TEMP;
	DROP TABLE #TEMP_RESULT;
END

/*
*************************************************
*	     STATUS POSSIVEIS PARA AS JOBS			*
*************************************************
*	null = Em execuçâo							*
*												*
*	0 = Falha com erro							*
*												*
*	1 = Bem-sucedido							*
*												*
*	3 = Cancelado								*
*												*
*	4 = Executar pelo usuário					*
*												*
*	5 = Status desconhecido						*
*												*
*	6 = Executar na programação ociosa da CPU	*
*************************************************
*/